/*
Use display: flex; to create a flex container.
Use justify-content to define the horizontal alignment of items.
Use align-items to define the vertical alignment of items.
Use flex-direction if you need columns instead of rows.
Use the row-reverse or column-reverse values to flip item order.
Use order to customize the order of individual elements.
Use align-self to vertically align individual items.
Use flex to create flexible boxes that can stretch and shrink.
*/


* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
  /* flexbox*/
  .menu-container {
    color: #fff;
    background-color: #5995DA;  /* Blue */
    padding: 20px 0;
    display: flex;
    justify-content: center;
  }

  .menu {
    border: 1px solid #fff;  /* For debugging */
    width: 800px;
    display: flex;
    justify-content: space-around;
  }

  .header-container {
    color: #5995DA;
    background-color: #D6E9FE;
    display: flex;
    justify-content: center;
  }

  .header {
    width: 900px;
    height: 300px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .photo-grid-container {
  display: flex;
  justify-content: center;
}

.photo-grid {
  width: 900px;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  flex-direction: row-reverse;  /* <--- Really freaking cool! */
  align-items: center;
}

.photo-grid-item {
  border: 1px solid #fff;
  width: 300px;
  height: 300px;
}

.social,
.subscribe {
  align-self: flex-end;
  margin-bottom: 20px;
}

.footer {
  display: flex;
  justify-content: space-between;
}

.footer-item {
  border: 1px solid #fff;
  background-color: #D6E9FE;
  height: 100px;
  flex: 1;
}

.footer-one,
.footer-three {
  background-color: #5995DA;
  /* we get a flexible layout that also contains fixed-width items */
  flex: initial;
  width: 300px;
}
